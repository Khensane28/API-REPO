{
	"info": {
		"_postman_id": "94d4d793-acea-4d0d-8093-6c6314fd4f74",
		"name": "Open Weather",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38101358"
	},
	"item": [
		{
			"name": "Create Weather Station",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that ID is saved in an environment \", function () {\r",
							"    var responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.have.property('ID');\r",
							"    pm.environment.set(\"stationID\", responseData.ID);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "31067ed9ec351f81358d9a62d668539c",
							"type": "string"
						},
						{
							"key": "key",
							"value": "appid",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "                    \r\n{\r\n  \"external_id\": \"SF_TEST001\",\r\n  \"name\": \"San Francisco Test Station\",\r\n  \"latitude\": 37.76,\r\n  \"longitude\": -122.43,\r\n  \"altitude\": 150\r\n}\r\n                    \r\n                  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Weather_BaseUrl}}/data/3.0/stations",
					"host": [
						"{{Weather_BaseUrl}}"
					],
					"path": [
						"data",
						"3.0",
						"stations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Station's Info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "31067ed9ec351f81358d9a62d668539c",
							"type": "string"
						},
						{
							"key": "key",
							"value": "appid",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "                    \r\n{\r\n  \"external_id\": \"SF_UPD001\",\r\n  \"name\": \"San Francisco Updated Station\",\r\n  \"latitude\": 37.80,\r\n  \"longitude\": -122.47,\r\n  \"altitude\": 143\r\n}                    \r\n                  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Weather_BaseUrl}}/data/3.0/stations/{{stationID}}",
					"host": [
						"{{Weather_BaseUrl}}"
					],
					"path": [
						"data",
						"3.0",
						"stations",
						"{{stationID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Negative]Create Weather Station with empty Longitude",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response message is not empty\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.not.be.empty;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "31067ed9ec351f81358d9a62d668539c",
							"type": "string"
						},
						{
							"key": "key",
							"value": "appid",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "                    \r\n{\r\n  \"external_id\": \"SF_TEST001\",\r\n  \"name\": \"San Francisco Test Station\",\r\n  \"latitude\": 37.76,\r\n  \"longitude\": \"\",\r\n  \"altitude\": 150\r\n}\r\n                    \r\n                  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Weather_BaseUrl}}/data/3.0/stations",
					"host": [
						"{{Weather_BaseUrl}}"
					],
					"path": [
						"data",
						"3.0",
						"stations"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Negative]Create Weather Station with empty altitude",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - code and message\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.code).to.exist;\r",
							"    pm.expect(responseData.message).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Code is a non-negative integer\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.code).to.exist.and.to.be.a('number');\r",
							"    pm.expect(responseData.code).to.be.at.least(0);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Message is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "31067ed9ec351f81358d9a62d668539c",
							"type": "string"
						},
						{
							"key": "key",
							"value": "appid",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "                    \r\n{\r\n  \"external_id\": \"SF_TEST001\",\r\n  \"name\": \"San Francisco Test Station\",\r\n  \"latitude\": 37.76,\r\n  \"longitude\": -122.43,\r\n  \"altitude\": \"\"\r\n}\r\n                    \r\n                  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Weather_BaseUrl}}/data/3.0/stations",
					"host": [
						"{{Weather_BaseUrl}}"
					],
					"path": [
						"data",
						"3.0",
						"stations"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Negative]Create Weather Station with empty latitude",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(400);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - code and message\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('code');\r",
							"    pm.expect(responseData).to.have.property('message');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Code is a non-negative integer\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.code).to.be.a('number');\r",
							"    pm.expect(responseData.code).to.be.at.least(0);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Message is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "31067ed9ec351f81358d9a62d668539c",
							"type": "string"
						},
						{
							"key": "key",
							"value": "appid",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "                    \r\n{\r\n  \"external_id\": \"SF_TEST001\",\r\n  \"name\": \"San Francisco Test Station\",\r\n  \"latitude\": \"\",\r\n  \"longitude\": -122.43,\r\n  \"altitude\": 150\r\n}\r\n                    \r\n                  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Weather_BaseUrl}}/data/3.0/stations",
					"host": [
						"{{Weather_BaseUrl}}"
					],
					"path": [
						"data",
						"3.0",
						"stations"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Negative]Create Weather Station with empty name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 400\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(400);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields - code and message\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.code).to.exist;\r",
							"  pm.expect(responseData.message).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validate the response schema\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('code');\r",
							"    pm.expect(responseData).to.have.property('message');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "31067ed9ec351f81358d9a62d668539c",
							"type": "string"
						},
						{
							"key": "key",
							"value": "appid",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "                    \r\n{\r\n  \"external_id\": \"SF_TEST001\",\r\n  \"name\": \"\",\r\n  \"latitude\": 37.76,\r\n  \"longitude\": -122.43,\r\n  \"altitude\": 150\r\n}\r\n                    \r\n                  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Weather_BaseUrl}}/data/3.0/stations",
					"host": [
						"{{Weather_BaseUrl}}"
					],
					"path": [
						"data",
						"3.0",
						"stations"
					]
				}
			},
			"response": []
		},
		{
			"name": "[Negative] - Create Weather Station with empty external id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"\r",
							"pm.test(\"Response status code is 400\", function () {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response includes 'code' and 'message' fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('code');\r",
							"    pm.expect(responseData).to.have.property('message');\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "31067ed9ec351f81358d9a62d668539c",
							"type": "string"
						},
						{
							"key": "key",
							"value": "appid",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "                    \r\n{\r\n  \"external_id\": \"\",\r\n  \"name\": \"San Francisco Test Station\",\r\n  \"latitude\": 37.76,\r\n  \"longitude\": -122.43,\r\n  \"altitude\": 150\r\n}\r\n                    \r\n                  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Weather_BaseUrl}}/data/3.0/stations",
					"host": [
						"{{Weather_BaseUrl}}"
					],
					"path": [
						"data",
						"3.0",
						"stations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Newly registered weather station",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		},
		{
			"name": "Delete the Weather Station",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "value",
							"value": "31067ed9ec351f81358d9a62d668539c",
							"type": "string"
						},
						{
							"key": "key",
							"value": "appid",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "                    \r\n{\r\n  \"external_id\": \"SF_TEST001\",\r\n  \"name\": \"San Francisco Test Station\",\r\n  \"latitude\": 37.76,\r\n  \"longitude\": -122.43,\r\n  \"altitude\": 150\r\n}\r\n                    \r\n                  ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Weather_BaseUrl}}/data/3.0/stations/{{stationID}}",
					"host": [
						"{{Weather_BaseUrl}}"
					],
					"path": [
						"data",
						"3.0",
						"stations",
						"{{stationID}}"
					]
				}
			},
			"response": []
		}
	]
}